/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.util.UUID;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CandidatesTable implements Serializable {

    private static final long serialVersionUID = 1L;

    private UUID id;
    private UUID userId;
    private String fido;
    private String pictureUrl;
    private String positionName;
    private Integer salary;
    private String cvUrl;

    public CandidatesTable() {}

    public CandidatesTable(CandidatesTable value) {
        this.id = value.id;
        this.userId = value.userId;
        this.fido = value.fido;
        this.pictureUrl = value.pictureUrl;
        this.positionName = value.positionName;
        this.salary = value.salary;
        this.cvUrl = value.cvUrl;
    }

    public CandidatesTable(
        UUID id,
        UUID userId,
        String fido,
        String pictureUrl,
        String positionName,
        Integer salary,
        String cvUrl
    ) {
        this.id = id;
        this.userId = userId;
        this.fido = fido;
        this.pictureUrl = pictureUrl;
        this.positionName = positionName;
        this.salary = salary;
        this.cvUrl = cvUrl;
    }

    /**
     * Getter for <code>public.candidates_table.id</code>.
     */
    public UUID getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.candidates_table.id</code>.
     */
    public CandidatesTable setId(UUID id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.candidates_table.user_id</code>.
     */
    public UUID getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.candidates_table.user_id</code>.
     */
    public CandidatesTable setUserId(UUID userId) {
        this.userId = userId;
        return this;
    }

    /**
     * Getter for <code>public.candidates_table.fido</code>.
     */
    public String getFido() {
        return this.fido;
    }

    /**
     * Setter for <code>public.candidates_table.fido</code>.
     */
    public CandidatesTable setFido(String fido) {
        this.fido = fido;
        return this;
    }

    /**
     * Getter for <code>public.candidates_table.picture_url</code>.
     */
    public String getPictureUrl() {
        return this.pictureUrl;
    }

    /**
     * Setter for <code>public.candidates_table.picture_url</code>.
     */
    public CandidatesTable setPictureUrl(String pictureUrl) {
        this.pictureUrl = pictureUrl;
        return this;
    }

    /**
     * Getter for <code>public.candidates_table.position_name</code>.
     */
    public String getPositionName() {
        return this.positionName;
    }

    /**
     * Setter for <code>public.candidates_table.position_name</code>.
     */
    public CandidatesTable setPositionName(String positionName) {
        this.positionName = positionName;
        return this;
    }

    /**
     * Getter for <code>public.candidates_table.salary</code>.
     */
    public Integer getSalary() {
        return this.salary;
    }

    /**
     * Setter for <code>public.candidates_table.salary</code>.
     */
    public CandidatesTable setSalary(Integer salary) {
        this.salary = salary;
        return this;
    }

    /**
     * Getter for <code>public.candidates_table.cv_url</code>.
     */
    public String getCvUrl() {
        return this.cvUrl;
    }

    /**
     * Setter for <code>public.candidates_table.cv_url</code>.
     */
    public CandidatesTable setCvUrl(String cvUrl) {
        this.cvUrl = cvUrl;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final CandidatesTable other = (CandidatesTable) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.fido == null) {
            if (other.fido != null)
                return false;
        }
        else if (!this.fido.equals(other.fido))
            return false;
        if (this.pictureUrl == null) {
            if (other.pictureUrl != null)
                return false;
        }
        else if (!this.pictureUrl.equals(other.pictureUrl))
            return false;
        if (this.positionName == null) {
            if (other.positionName != null)
                return false;
        }
        else if (!this.positionName.equals(other.positionName))
            return false;
        if (this.salary == null) {
            if (other.salary != null)
                return false;
        }
        else if (!this.salary.equals(other.salary))
            return false;
        if (this.cvUrl == null) {
            if (other.cvUrl != null)
                return false;
        }
        else if (!this.cvUrl.equals(other.cvUrl))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.fido == null) ? 0 : this.fido.hashCode());
        result = prime * result + ((this.pictureUrl == null) ? 0 : this.pictureUrl.hashCode());
        result = prime * result + ((this.positionName == null) ? 0 : this.positionName.hashCode());
        result = prime * result + ((this.salary == null) ? 0 : this.salary.hashCode());
        result = prime * result + ((this.cvUrl == null) ? 0 : this.cvUrl.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CandidatesTable (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(fido);
        sb.append(", ").append(pictureUrl);
        sb.append(", ").append(positionName);
        sb.append(", ").append(salary);
        sb.append(", ").append(cvUrl);

        sb.append(")");
        return sb.toString();
    }
}
