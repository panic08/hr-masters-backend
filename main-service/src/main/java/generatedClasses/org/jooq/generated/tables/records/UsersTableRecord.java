/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.tables.records;


import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.generated.tables.UsersTable;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersTableRecord extends UpdatableRecordImpl<UsersTableRecord> implements Record4<UUID, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users_table.id</code>.
     */
    public UsersTableRecord setId(UUID value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users_table.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.users_table.email</code>.
     */
    public UsersTableRecord setEmail(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users_table.email</code>.
     */
    public String getEmail() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.users_table.password</code>.
     */
    public UsersTableRecord setPassword(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users_table.password</code>.
     */
    public String getPassword() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users_table.registered_at</code>.
     */
    public UsersTableRecord setRegisteredAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users_table.registered_at</code>.
     */
    public LocalDateTime getRegisteredAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return UsersTable.USERS_TABLE.ID;
    }

    @Override
    public Field<String> field2() {
        return UsersTable.USERS_TABLE.EMAIL;
    }

    @Override
    public Field<String> field3() {
        return UsersTable.USERS_TABLE.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UsersTable.USERS_TABLE.REGISTERED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getEmail();
    }

    @Override
    public String component3() {
        return getPassword();
    }

    @Override
    public LocalDateTime component4() {
        return getRegisteredAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getEmail();
    }

    @Override
    public String value3() {
        return getPassword();
    }

    @Override
    public LocalDateTime value4() {
        return getRegisteredAt();
    }

    @Override
    public UsersTableRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public UsersTableRecord value2(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UsersTableRecord value3(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UsersTableRecord value4(LocalDateTime value) {
        setRegisteredAt(value);
        return this;
    }

    @Override
    public UsersTableRecord values(UUID value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersTableRecord
     */
    public UsersTableRecord() {
        super(UsersTable.USERS_TABLE);
    }

    /**
     * Create a detached, initialised UsersTableRecord
     */
    public UsersTableRecord(UUID id, String email, String password, LocalDateTime registeredAt) {
        super(UsersTable.USERS_TABLE);

        setId(id);
        setEmail(email);
        setPassword(password);
        setRegisteredAt(registeredAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersTableRecord
     */
    public UsersTableRecord(org.jooq.generated.tables.pojos.UsersTable value) {
        super(UsersTable.USERS_TABLE);

        if (value != null) {
            setId(value.getId());
            setEmail(value.getEmail());
            setPassword(value.getPassword());
            setRegisteredAt(value.getRegisteredAt());
            resetChangedOnNotNull();
        }
    }
}
